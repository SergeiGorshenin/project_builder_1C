
#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьКоманды(НаборКоманд, Команда, ДляРасширения) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сп_Команды.Команда КАК Команда
	|ИЗ
	|	Справочник.сп_Команды КАК сп_Команды
	|ГДЕ
	|	сп_Команды.Ссылка = &Ссылка
	|	И ПОДСТРОКА(сп_Команды.Команда, 0, 1) <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сп_КомандыНаборКоманд.Команда.Команда КАК Команда
	|ИЗ
	|	Справочник.сп_Команды.НаборКоманд КАК сп_КомандыНаборКоманд
	|ГДЕ
	|	сп_КомандыНаборКоманд.Ссылка = &Ссылка
	|	И ПОДСТРОКА(сп_КомандыНаборКоманд.Команда.Команда, 0, 1) <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	сп_КомандыНаборКоманд.НомерСтроки";
	Запрос.УстановитьПараметр("Ссылка", Команда);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	Команды = Новый Массив;
	Команды.Добавить(ПакетЗапросов[0].Выгрузить().ВыгрузитьКолонку("Команда"));
	Команды.Добавить(ПакетЗапросов[1].Выгрузить().ВыгрузитьКолонку("Команда"));
	
	Для каждого ТекКоманда Из Команды Цикл
		Если ТекКоманда.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДляРасширения Тогда
			НаборКоманд.Добавить("#$ДляРасширения$#" + СтрСоединить(ТекКоманда, " "));
		Иначе
			НаборКоманд.Добавить(СтрСоединить(ТекКоманда, " "));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаполнитьКомандуДанными(ТекКоманда, Программа, ДанныеРеквизитовКонфигурации) Экспорт
	
	Результат = Новый Массив;
	
	ЗаполняемаяКоманда = СтрЗаменить(ТекКоманда, "#$Программа$#", Программа);
	Если СтрНачинаетсяС(ЗаполняемаяКоманда, "#$ДляРасширения$#") Тогда
		ЗаполняемаяКоманда = СтрЗаменить(ЗаполняемаяКоманда, "#$ДляРасширения$#", "");
		
		Для каждого РасширениеКонфигурации Из ДанныеРеквизитовКонфигурации.РасширенияКонфигурации Цикл
			РасширениеКонфигурацииСтруктура = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РасширениеКонфигурации);
			
			Для каждого ДанныеРеквизита Из РасширениеКонфигурацииСтруктура Цикл
				ЗаполняемаяКоманда = СтрЗаменить(ЗаполняемаяКоманда, СтрШаблон("#$%1$#", ДанныеРеквизита.Ключ), ДанныеРеквизита.Значение);
			КонецЦикла;
			
			Для каждого ДанныеРеквизита Из ДанныеРеквизитовКонфигурации.РеквизитыКонфигурации Цикл
				ЗаполняемаяКоманда = СтрЗаменить(ЗаполняемаяКоманда, СтрШаблон("#$%1$#", ДанныеРеквизита.Ключ), ДанныеРеквизита.Значение);
			КонецЦикла;
			
			Результат.Добавить(ЗаполняемаяКоманда);
		КонецЦикла;
	Иначе 
		Для каждого ДанныеРеквизита Из ДанныеРеквизитовКонфигурации.РеквизитыКонфигурации Цикл
			ЗаполняемаяКоманда = СтрЗаменить(ЗаполняемаяКоманда, СтрШаблон("#$%1$#", ДанныеРеквизита.Ключ), ДанныеРеквизита.Значение);
		КонецЦикла;
		
		Результат.Добавить(ЗаполняемаяКоманда);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеРеквизитовКонфигурации(Конфигурация) Экспорт 

	ИдентификаторОбъектаМетаданных   = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Конфигурация));
	ОбъектМетаданныхПоИдентификатору = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ИдентификаторОбъектаМетаданных);
	
	Результат = Новый Структура;
	Результат.Вставить("РеквизитыКонфигурации", Новый Структура);
	Результат.Вставить("РасширенияКонфигурации", Новый ТаблицаЗначений);
	Результат.Вставить("РасширенияDEVКонфигурации", Новый ТаблицаЗначений);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*, ИнструментРазрешенияКонфликтов.Программа КАК ИнструментРазрешенияКонфликтовПрограмма
	|ИЗ
	|	Справочник.сп_Конфигурации КАК сп_Конфигурации
	|ГДЕ
	|	сп_Конфигурации.Ссылка = &Конфигурация";
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();

	Для каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		Для каждого ТекРеквизит Из ОбъектМетаданныхПоИдентификатору.Реквизиты Цикл
			Если ТекРеквизит.Имя = "КаталогЛогФайлов" Тогда
				Продолжить;
			КонецЕсли;
			
			Результат.РеквизитыКонфигурации.Вставить(ТекРеквизит.Имя, СтрокаЗапроса[ТекРеквизит.Имя]);
		КонецЦикла;	
		
		Результат.РеквизитыКонфигурации.Вставить("ИнструментРазрешенияКонфликтовПрограмма", СтрокаЗапроса.ИнструментРазрешенияКонфликтовПрограмма);
		
		Результат.РасширенияКонфигурации = СтрокаЗапроса.Расширения.Скопировать(, "НомерСтроки, ИмяРасширения, КаталогХранилища, ИмяПользователяХранилища, ПарольПользователяХранилища");
		Результат.РасширенияКонфигурации.Сортировать("НомерСтроки Возр");
		
		Результат.РасширенияDEVКонфигурации = СтрокаЗапроса.РасширенияDEV.Скопировать(, "НомерСтроки, ИмяРасширения, КаталогХранилища, ИмяПользователяХранилища, ПарольПользователяХранилища");
		Результат.РасширенияDEVКонфигурации.Сортировать("НомерСтроки Возр");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ФактическаяКоманда(ТекКоманда, Конфигурация, Программа) Экспорт

	ФактическаяКоманда = "";
	
	ДанныеРеквизитовКонфигурации = сп_ОбщегоНазначенияСервер.ДанныеРеквизитовКонфигурации(Конфигурация);
	
	ЗаполненныеКоманды = сп_ОбщегоНазначенияСервер.ЗаполнитьКомандуДанными(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекКоманда, "Команда"), 
			Программа, ДанныеРеквизитовКонфигурации);
	
	Для каждого ЗаполненнаяКоманда Из ЗаполненныеКоманды Цикл
		ФактическаяКоманда = ЗаполненнаяКоманда;
	КонецЦикла;
	
	Возврат ФактическаяКоманда;
	
КонецФункции

#КонецОбласти
