
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогСборкиНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогСборкиПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогСборки);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогЛогФайловНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогЛогФайловПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогЛогФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнформационнойБазыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогИнформационнойБазыПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогИнформационнойБазы);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогХранилищаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогХранилищаПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнформационнойБазыDEVНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогИнформационнойБазыDEVПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогИнформационнойБазы);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогХранилищаDEVНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("КаталогХранилищаDEVПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Объект.КаталогХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПодключенияПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасширения

&НаКлиенте
Процедура РасширенияКаталогХранилищаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("РасширенияКаталогХранилищаПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Элементы.Расширения.ТекущиеДанные.КаталогХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенияDEVКаталогХранилищаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("РасширенияDEVКаталогХранилищаПослеВыбораКаталога", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выберите каталог'"), Элементы.Расширения.ТекущиеДанные.КаталогХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КаталогСборкиПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогСборки = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогЛогФайловПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогЛогФайлов = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнформационнойБазыПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогИнформационнойБазы = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогХранилищаПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогХранилища = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенияКаталогХранилищаПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Расширения.ТекущиеДанные.КаталогХранилища = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнформационнойБазыDEVПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогИнформационнойБазыDEV = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогХранилищаDEVПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогХранилищаDEV = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенияDEVКаталогХранилищаПослеВыбораКаталога(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.РасширенияDEV.ТекущиеДанные.КаталогХранилища = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	ФайловаяБаза	 = Объект.СпособПодключения = ПредопределенноеЗначение("Перечисление.сп_СпособыПодключения.ПодключениеКФайловойБазе");
	СервернаяБаза	 = Объект.СпособПодключения = ПредопределенноеЗначение("Перечисление.сп_СпособыПодключения.ПодключениеККлиентСервернойБазе");
	ФайловаяБазаDEV	 = Объект.СпособПодключенияDEV = ПредопределенноеЗначение("Перечисление.сп_СпособыПодключения.ПодключениеКФайловойБазе");
	СервернаяБазаDEV = Объект.СпособПодключенияDEV = ПредопределенноеЗначение("Перечисление.сп_СпособыПодключения.ПодключениеККлиентСервернойБазе");
	
	Элементы.КаталогИнформационнойБазы.Видимость = ФайловаяБаза;
	Элементы.ИмяСервера.Видимость = СервернаяБаза;
	Элементы.ИмяБазы.Видимость = СервернаяБаза;
	
	Элементы.КаталогИнформационнойБазыDEV.Видимость = ФайловаяБазаDEV;
	Элементы.ИмяСервераDEV.Видимость = СервернаяБазаDEV;
	Элементы.ИмяБазыDEV.Видимость = СервернаяБазаDEV;

КонецПроцедуры

#КонецОбласти