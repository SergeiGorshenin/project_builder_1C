
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СценарийПриИзменении(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонфигурацияПриИзменении(Элемент)
	
	ЗаполнитьКомандыСценария();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	
	ЗаполнитьКомандыСценария();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомандыСценария

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьСценарий(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВопроса = Новый Структура;
	ПараметрыВопроса.Вставить("ВидВопроса", "ВыполнитьСценарий");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыВопроса);
	ПоказатьВопрос(Оповещение, СтрШаблон(НСтр("ru = 'Продолжить выполнение операции ""%1""?'"), Объект.Сценарий), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаборКоманд(Команда)
	
	СценарийПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура GitStatus(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВопроса = Новый Структура;
	ПараметрыВопроса.Вставить("ВидВопроса", "ВыполнитьGitStatus");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыВопроса);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Выполнить ""GIT STATUS""?'"), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ResetHardДляDEV(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВопроса = Новый Структура;
	ПараметрыВопроса.Вставить("ВидВопроса", "ВыполнитьResetHardДляDEV");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыВопроса);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Выполнить ""reset --hard (для DEV)""?'"), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура MergeDEVсMASTER(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВопроса = Новый Структура;
	ПараметрыВопроса.Вставить("ВидВопроса", "ВыполнитьMergeDEVсMASTER");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыВопроса);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Выполнить ""merge DEV с MASTER""?'"), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодготовитьЛогФайла()
	РеквизитыОбъекта = РеквизитыКонфигурации(Объект.Конфигурация, "КаталогСборки, КаталогЛогФайлов");
	
	Объект.ЛогФайл = сп_ОбщегоНазначенияКлиент.ЛогФайл(РеквизитыОбъекта.КаталогЛогФайлов);
	сп_ОбщегоНазначенияКлиент.ЗаполнитьGitignore(РеквизитыОбъекта.КаталогСборки, РеквизитыОбъекта.КаталогЛогФайлов);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНаборКоманд(НаборКоманд)
	ПодготовитьЛогФайла();
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормаЧтенияЛогФайла", ЭтотОбъект);

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", Объект);
	
	ОткрытьФорму("Обработка.сп_ВыполнениеСценариев.Форма.ФормаЧтенияЛогФайла", ПараметрыОткрытия, 
		ЭтаФорма, Новый УникальныйИдентификатор, , , ОповещениеОЗакрытии, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	сп_ОбщегоНазначенияКлиент.ВыполнитьНаборКоманд(НаборКоманд, Объект.Сценарий, Объект.ЛогФайл, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормаЧтенияЛогФайла(Результат, Параметры) Экспорт
	
	Если Не ТипЗнч(Результат) = Тип("Структура") 
		Или Не Результат.Свойство("ПрерватьВыполнениеКоманд") Тогда
		
		Возврат;		
	
	КонецЕсли;
	
	Объект.ПрерватьВыполнениеКоманд = Результат.ПрерватьВыполнениеКоманд;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    Если Параметры.ВидВопроса = "ВыполнитьСценарий" Тогда
		НаборКоманд = Новый Массив;
		Для каждого ТекКомана Из Объект.КомандыСценария Цикл
			НаборКоманд.Добавить(ТекКомана.ФактическаяКоманда);
		КонецЦикла;
		
		ВыполнитьНаборКоманд(НаборКоманд);
	ИначеЕсли Параметры.ВидВопроса = "ВыполнитьGitStatus" Тогда
		НаборКоманд = Новый Массив;
		НаборКоманд.Добавить(ФактическаяКомандаGit(ПредопределенноеЗначение("Справочник.сп_Команды.Status")));
		
		ВыполнитьНаборКоманд(НаборКоманд);
	ИначеЕсли Параметры.ВидВопроса = "ВыполнитьResetHardДляDEV" Тогда
		НаборКоманд = Новый Массив;
		НаборКоманд.Добавить(ФактическаяКомандаGit(ПредопределенноеЗначение("Справочник.сп_Команды.CheckoutDEV")));
		НаборКоманд.Добавить(ФактическаяКомандаGit(ПредопределенноеЗначение("Справочник.сп_Команды.ResetHard")));
		
		ВыполнитьНаборКоманд(НаборКоманд);
	ИначеЕсли Параметры.ВидВопроса = "ВыполнитьMergeDEVсMASTER" Тогда
		НаборКоманд = Новый Массив;
		НаборКоманд.Добавить(ФактическаяКомандаGit(ПредопределенноеЗначение("Справочник.сп_Команды.CheckoutDEV")));
		НаборКоманд.Добавить(ФактическаяКомандаGit(ПредопределенноеЗначение("Справочник.сп_Команды.MergeMaster")));
		
		ВыполнитьНаборКоманд(НаборКоманд);
	КонецЕсли;

КонецПроцедуры 

&НаСервереБезКонтекста
Функция РеквизитыКонфигурации(Конфигурация, РеквизитыОбъекта)

	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Конфигурация, РеквизитыОбъекта);

КонецФункции

&НаСервере
Процедура ЗаполнитьКомандыСценария()

	Объект.КомандыСценария.Очистить();
	
	Если Не ЗначениеЗаполнено(Объект.Конфигурация)
		Или Не ЗначениеЗаполнено(Объект.Сценарий) Тогда
	
		Возврат;
		
	КонецЕсли;
	
	НаборКоманд = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сп_СценарииСборкиНаборКоманд.Команда КАК Команда,
	|	сп_СценарииСборкиНаборКоманд.ДляРасширения КАК ДляРасширения
	|ИЗ
	|	Справочник.сп_СценарииСборки.НаборКоманд КАК сп_СценарииСборкиНаборКоманд
	|ГДЕ
	|	сп_СценарииСборкиНаборКоманд.Ссылка = &Сценарий";
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока ТаблицаЗапроса.Следующий() Цикл
		сп_ОбщегоНазначенияСервер.ДобавитьКоманды(НаборКоманд, ТаблицаЗапроса.Команда, ТаблицаЗапроса.ДляРасширения);
	КонецЦикла;

	ДанныеРеквизитовКонфигурации = сп_ОбщегоНазначенияСервер.ДанныеРеквизитовКонфигурации(Объект.Конфигурация);
	Для каждого ТекКоманда Из НаборКоманд Цикл
		ЗаполненныеКоманды = сп_ОбщегоНазначенияСервер.ЗаполнитьКомандуДанными(ТекКоманда, Объект.Программа, ДанныеРеквизитовКонфигурации);
		
		Для каждого ЗаполненнаяКоманда Из ЗаполненныеКоманды Цикл
			НовСтрока = Объект.КомандыСценария.Добавить();
			НовСтрока.Команда = ТекКоманда;
		    НовСтрока.ФактическаяКоманда = ЗаполненнаяКоманда;
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ФактическаяКомандаGit(ТекКоманда)

	Возврат сп_ОбщегоНазначенияСервер.ФактическаяКоманда(ТекКоманда, Объект.Конфигурация, Объект.Программа);
	
КонецФункции

#КонецОбласти